# Load necessary libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(cluster)
library(factoextra)
library(mclust)
library(e1071)

# 1. Data Preprocessing
# Download the dataset
dataset_url <- "https://github.com/Uviase/Medici..Ne/blob/c50888d28ebf59b2c6ecf004182fc89993ba8a8f/dataset.zip"
download.file(dataset_url, destfile = "dataset.zip")
unzip("dataset.zip", exdir = "dataset")

# Load the dataset
data <- read.csv("dataset/dataset.csv", header = FALSE)

# Select columns for cognition, temperature, and electrodermal activity
cognition_cols <- c(3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90)
temperature_cols <- c(1, 4, 7, 10, 13, 16, 19, 22, 25, 28, 31, 34, 37, 40, 43, 46, 49, 52, 55, 58, 61, 64, 67, 70, 73, 76, 79, 82, 85, 88)
electrodermal_cols <- c(2, 5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35, 38, 41, 44, 47, 50, 53, 56, 59, 62, 65, 68, 71, 74, 77, 80, 83, 86, 89)

# Filter out the first row for preprocessing and remove zero values in electrodermal activity
data <- data[-1,]
data <- data %>%
  filter_at(vars(electrodermal_cols), all_vars(. != 0))

# Add cognition bins
cognition <- as.numeric(unlist(data[cognition_cols]))
low_bound <- 33
high_bound <- 94
bins <- cut(cognition,
            breaks = c(low_bound, 
                       low_bound + (high_bound - low_bound) * 0.333, 
                       low_bound + (high_bound - low_bound) * 0.667, 
                       high_bound),
            labels = c("Low", "Mid", "High"),
            include.lowest = TRUE)

data$cognition_bin <- bins

# 1i. Perform Cluster Analysis
features <- as.data.frame(data[, c(temperature_cols, electrodermal_cols)])
scaled_features <- scale(features)

# K-means Clustering
set.seed(123)
km_res <- kmeans(scaled_features, centers = 3, nstart = 25)

# Hierarchical Clustering
hc_res <- hclust(dist(scaled_features), method = "ward.D2")

# Gaussian Mixture Models
gmm_res <- Mclust(scaled_features, G = 3)

# Fuzzy C-Means Clustering
fcm_res <- cmeans(scaled_features, centers = 3, m = 2)

# Visualize K-means clusters
fviz_cluster(km_res, scaled_features)

# 1ii. Analyze the distribution
ggplot(data, aes(x = cognition_bin)) +
  geom_bar() +
  theme_minimal() +
  xlab("Cognition Bin") +
  ylab("Count")

# 2. Summarize Notes on Cluster Analysis
cat("K-means: Partitions data into clusters by minimizing within-cluster variance.\n")
cat("Hierarchical: Agglomerative builds clusters bottom-up; divisive starts from one cluster and splits.\n")
cat("Gaussian Mixture Models: Probabilistic model assuming data is from Gaussian distributions.\n")
cat("Fuzzy C-Means: Each data point belongs to a cluster with a degree of membership.\n")

# 3. Perform Methods
# Elbow Method
fviz_nbclust(scaled_features, kmeans, method = "wss")

# Silhouette Score
fviz_nbclust(scaled_features, kmeans, method = "silhouette")

# Gap Statistic
gap_stat <- clusGap(scaled_features, FUN = kmeans, nstart = 25, K.max = 10, B = 50)
fviz_gap_stat(gap_stat)

# BIC and AIC for GMM
cat("BIC for GMM:", gmm_res$BIC, "\n")
cat("AIC for GMM:", gmm_res$AIC, "\n")

# 4. Internal and External Validation
# Davies-Bouldin Index
db_index <- index.DB(scaled_features, km_res$cluster)$DB
cat("Davies-Bouldin Index:", db_index, "\n")

# Adjusted Rand Index (requires ground truth labels)
if (!is.null(data$cognition_bin)) {
  ground_truth <- as.numeric(data$cognition_bin)
  ari <- adjustedRandIndex(km_res$cluster, ground_truth)
  cat("Adjusted Rand Index:", ari, "\n")
}